CREATE TABLE TB_USER_GRADE (
    GRADE VARCHAR2(100),
    MIN_POINT NUMBER(10),
    MAX_POINT NUMBER(10),
    
    CONSTRAINT TB_USER_GRADE_PK PRIMARY KEY (GRADE)         -- 기본키 제약조건 설정
);

CREATE TABLE TB_PRODUCT_CATEGORY (
    CATEGORY_NO NUMBER(7),
    CATEGORY_NAME VARCHAR2(100),
    
    CONSTRAINT TB_PROD_CATNO_PK PRIMARY KEY (CATEGORY_NO)   -- 기본키 제약조건 설정
);

CREATE TABLE TB_USERS (
    USER_NO NUMBER(7),
    USER_ID VARCHAR2(100) NOT NULL,                         -- NOT NULL 제약조건 설정
    USER_PASSWORD VARCHAR2(100) NOT NULL,                   -- NOT NULL 제약조건 설정
    USER_NAME VARCHAR2(100) NOT NULL,                       -- NOT NULL 제약조건 설정
    USER_EMAIL VARCHAR2(255),
    USER_POINT NUMBER(10),
    USER_GRADE VARCHAR2(100),
    USER_UPDATED_DATE DATE,
    USER_CREATED_DATE DATE DEFAULT SYSDATE,
    
    CONSTRAINT TB_USERNO_PK PRIMARY KEY(USER_NO),           -- 기본키 제약조건 설정
    CONSTRAINT TB_USERID_UK UNIQUE (USER_ID),               -- 고유키 제약조건 설정
    CONSTRAINT TB_EMAIL_UK UNIQUE (USER_EMAIL),             -- 고유키 제약조건 설정
    CONSTRAINT TB_USER_GRADE_FK FOREIGN KEY (USER_GRADE) REFERENCES TB_USER_GRADE (GRADE)   -- 외래키 제약조건 설정
);

CREATE TABLE TB_PRODUCTS (
    PRODUCT_NO NUMBER(7),
    CATEGORY_NO NUMBER(7) NOT NULL,
    PRODUCT_NAME VARCHAR2(255) NOT NULL,
    PRODUCT_MAKER VARCHAR2(255),
    PRODUCT_PRICE NUMBER(10),
    PRODUCT_DISCOUNT_PRICE NUMBER(10),
    PRODUCT_STOCK NUMBER(7),
    PRODUCT_ON_SELL CHAR(1) DEFAULT 'Y',            -- 판매여부 'Y'를 기본값으로 설정
    PRODUCT_SELL_SCORE NUMBER(10) DEFAULT 0,        -- 판매지수 0을 기본값으로 설정
    PRODUCT_REVIEW_SCORE NUMBER(3,1) DEFAULT 0.0,   -- 리뷰평점 0.0을 기본값으로 설정
    PRODUCT_REVIEW_CNT NUMBER(7) DEFAULT 0,         -- 리뷰갯수 0을 기본값으로 설정
    PRODUCT_UPDATED_DATE DATE,
    PRODUCT_CREATED_DATE DATE DEFAULT SYSDATE,
    
    CONSTRAINT TB_PRODUCTNO_PK PRIMARY KEY (PRODUCT_NO),    -- 기본키 제약조건
    CONSTRAINT TB_PROD_CATNO_FK FOREIGN KEY (CATEGORY_NO) REFERENCES TB_PRODUCT_CATEGORY (CATEGORY_NO), -- 외래키 제약조건
    CONSTRAINT TB_PROD_PRICE_CK CHECK (PRODUCT_PRICE >= 0),                 -- CHECK 제약조건
    CONSTRAINT TB_PROD_DISCOUNTPRICE_CK CHECK (PRODUCT_DISCOUNT_PRICE >=0), -- CHECK 제약조건
    CONSTRAINT TB_PROD_ONSELL_CK CHECK (PRODUCT_ON_SELL IN ('Y', 'N'))      -- CHECK 제약조건
);

CREATE TABLE COUPONS (
    COUPON_NO NUMBER(7),
    COUPON_NAME VARCHAR2(255),
    COUPON_TYPE CHAR(1) DEFAULT 'D',        -- 쿠폰타입 'D'을 기본값으로 설정, 'D'는 지정된 가격만큼 할인, 'P'는 지정된 비율만큼 할인
    COUPON_DISCOUNT NUMBER(6),
    COUPON_USE_PERIOD NUMBER(3),
    COUPON_DISABLED CHAR(1) DEFAULT 'N',    -- 쿠폰비활성화 여부 'N'을 기본값으로 설정
    COUPON_UPDATED_DATE DATE,
    COUPON_CREATED_DATE DATE DEFAULT SYSDATE,
    
    CONSTRAINT TB_COUPONNO_PK PRIMARY KEY (COUPON_NO),
    CONSTRAINT TB_COUPONTYPE_CK CHECK (COUPON_TYPE IN ('D', 'P')),
    CONSTRAINT TB_COUPONDISABLED_CK CHECK (COUPON_DISABLED IN ('Y', 'N'))
);

CREATE TABLE TB_HOLDING_COUPONS (
    COUPON_NO NUMBER(7) NOT NULL,
    USER_NO NUMBER(7) NOT NULL,
    COUPON_EXPIRY_DATE DATE,
    COUPON_EXPIRED CHAR(1) DEFAULT 'N',
    COUPON_UPDATED_DATE DATE,
    COUPON_CREATED_DATE DATE DEFAULT SYSDATE,
    
    CONSTRAINT TB_HOLD_COUPON_NO_FK FOREIGN KEY (COUPON_NO) REFERENCES TB_COUPONS (COUPON_NO),
    CONSTRAINT TB_HOLD_USER_NO_FK FOREIGN KEY (USER_NO) REFERENCES TB_USERS (USER_NO),
    CONSTRAINT TB_HOLD_COUPON_PK PRIMARY KEY (COUPON_NO, USER_NO),
    CONSTRAINT TB_HOLD_EXPIRED_CH CHECK (COUPON_EXPIRED IN ('Y', 'N'))
);
