-- 부서 아이디, 부서명, 해당 부서가 위치한 소재지 도시명을 조회하기
SELECT D.DEPARTMENT_ID, D.DEPARTMENT_NAME, L.CITY
FROM DEPARTMENTS D, LOCATIONS L
WHERE D.LOCATION_ID = L.LOCATION_ID
ORDER BY D.DEPARTMENT_ID;

-- 급여를 5000 이하로 받는 직원의 아이디, 이름, 급여, 직종제목 조회하기
SELECT E.EMPLOYEE_ID, FIRST_NAME, E.SALARY, J.JOB_TITLE
FROM EMPLOYEES E, JOBS J
WHERE E.SALARY <= 5000
AND E.JOB_ID = J.JOB_ID
ORDER BY E.EMPLOYEE_ID;

-- 급여를 5000 이하로 받는 직원의 아이디, 이름, 급여, 직종제목, 소속부서명을 조회하기
SELECT E.EMPLOYEE_ID, E.FIRST_NAME, E.SALARY, J.JOB_TITLE, D.DEPARTMENT_NAME
FROM EMPLOYEES E, JOBS J, DEPARTMENTS D
WHERE E.SALARY <= 5000
AND E.JOB_ID = J.JOB_ID
AND E.DEPARTMENT_ID = D.DEPARTMENT_ID
ORDER BY E.EMPLOYEE_ID;

-- 급여를 5000 이상 10000 이하로 받고, 50이나 80번 부서에 근무중인 직원의 아이디, 이름, 급여, 직종제목을 조회하기
SELECT E.EMPLOYEE_ID, E.FIRST_NAME, E.SALARY, J.JOB_TITLE
FROM EMPLOYEES E, JOBS J
WHERE E.SALARY >= 5000 AND E.SALARY <= 10000
AND E.DEPARTMENT_ID IN (50,80)
AND E.JOB_ID = J.JOB_ID
ORDER BY E.EMPLOYEE_ID;

-- 부서아이디, 부서명, 해당 부서가 위치한 소재지 도시명, 해당 도시가 위치한 나라이름 조회하기
SELECT D.DEPARTMENT_ID, D.DEPARTMENT_NAME, L.CITY, C.COUNTRY_NAME
FROM DEPARTMENTS D, LOCATIONS L, COUNTRIES C
WHERE D.LOCATION_ID = L.LOCATION_ID
AND L.COUNTRY_ID = C.COUNTRY_ID
ORDER BY D.DEPARTMENT_ID;

-- 'Oxford'에서 근무중인 직원아이디, 직원이름을 조회하기
SELECT E.EMPLOYEE_ID, E.FIRST_NAME
FROM EMPLOYEES E, DEPARTMENTS D, LOCATIONS L
WHERE L.CITY = 'Oxford'
AND L.LOCATION_ID = D.LOCATION_ID
AND D.DEPARTMENT_ID = E.DEPARTMENT_ID;

-- 부서 관리자가 지정되어 있는 부서의 부서아이디, 부서명, 부서관리자 아이디, 부서관리자 이름, 부서관리자의 직종아이디를 조회하기
SELECT D.DEPARTMENT_ID, D.DEPARTMENT_NAME, D.MANAGER_ID, E.FIRST_NAME, E.JOB_ID
FROM DEPARTMENTS D, EMPLOYEES E
WHERE D.MANAGER_ID IS NOT NULL
AND D.MANAGER_ID = E.EMPLOYEE_ID
ORDER BY D.DEPARTMENT_ID;

-- 급여를 3000이하로 받는 사원들이 근무중인 부서이름을 중복없이 조회하기
SELECT DISTINCT D.DEPARTMENT_NAME
FROM EMPLOYEES E, DEPARTMENTS D
WHERE E.SALARY <= 3000
AND E.DEPARTMENT_ID = D.DEPARTMENT_ID
ORDER BY D.DEPARTMENT_NAME;

-- 관리자의 급여 등급이 B등급인 관리자가 관리하는 직원의 아이디, 직원이름을 조회하기***
SELECT EMP.EMPLOYEE_ID, EMP.FIRST_NAME
FROM EMPLOYEES MGR, EMPLOYEES EMP, SALARY_GRADE S
WHERE S.MIN_SALARY <= MGR.SALARY AND S.MAX_SALARY >= MGR.SALARY
AND S.GRADE = 'B'
AND MGR.EMPLOYEE_ID = EMP.MANAGER_ID
ORDER BY EMP.EMPLOYEE_ID;

-- 커미션을 받는 모든 직원의 아이디, 이름, 급여, 연봉, 소속부서명을 조회하기
-- 연봉 = 급여*12 + 급여*커미션*12
SELECT E.EMPLOYEE_ID, E.FIRST_NAME, E.SALARY, E.SALARY*12 + E.SALARY*COMMISSION_PCT*12 ANNUAL_SAL, D.DEPARTMENT_NAME
FROM EMPLOYEES E, DEPARTMENTS D
WHERE COMMISSION_PCT IS NOT NULL
AND E.DEPARTMENT_ID = D.DEPARTMENT_ID
ORDER BY E.EMPLOYEE_ID;

-- 직원 중에서 자신의 관리자보다 먼저 입사한 직원의 아이디, 직원이름, 직원의 입사일, 관리자의 이름, 관리자의 입사일 조회하기
--                  E2                       E           E           E           E2             E2
SELECT EMP.EMPLOYEE_ID EMP_ID,
        EMP.FIRST_NAME EMP_NAME,
        EMP.HIRE_DATE EMP_HIRE_DATE,
        MGR.FIRST_NAME MGR_NAME,
        MGR.HIRE_DATE MGR_HIRE_DATE -- 테이블의 컬럼명이 같으므로 구별할 수 있도록 별칭을 주어야 한다.
FROM EMPLOYEES EMP, EMPLOYEES MGR
WHERE EMP.MANAGER_ID = MGR.EMPLOYEE_ID
AND EMP.HIRE_DATE < MGR.HIRE_DATE -- 괄호에서 큰 쪽이 더 최근 날짜이다.
ORDER BY EMP.EMPLOYEE_ID;

-- 직원아이디, 직원이름, 직종제목, 급여, 급여등급, 소속부서명, 근무지도시명, 관리자이름을 조회하기
SELECT EMP.EMPLOYEE_ID      EMP_ID,
        EMP.FIRST_NAME      EMP_NAME,
        J.JOB_TITLE         EMP_JOB_TITLE,
        EMP.SALARY          EMP_SALARY,
        S.GRADE             EMP_GRADE,
        D.DEPARTMENT_NAME   EMP_DEPT_NAME,
        L.CITY              EMP_DEPT_CITY,
        MGR.FIRST_NAME      MGR_NAME
FROM EMPLOYEES EMP, JOBS J, SALARY_GRADE S, DEPARTMENTS D, LOCATIONS L, EMPLOYEES MGR
WHERE EMP.JOB_ID = J.JOB_ID
AND S.MIN_SALARY <= EMP.SALARY AND S.MAX_SALARY >= EMP.SALARY
AND EMP.DEPARTMENT_ID = D.DEPARTMENT_ID
AND D.LOCATION_ID = L.LOCATION_ID
AND EMP.MANAGER_ID = MGR.EMPLOYEE_ID
ORDER BY EMP_ID;

-- 일부 NULL 값으로 인해 조인되지 않은 값이 있다. 포괄조인을 통해 그런 행도 조회할 수 있게 한다. 
SELECT EMP.EMPLOYEE_ID      EMP_ID,
        EMP.FIRST_NAME      EMP_NAME,
        J.JOB_TITLE         EMP_JOB_TITLE,
        EMP.SALARY          EMP_SALARY,
        S.GRADE             EMP_GRADE,
        D.DEPARTMENT_NAME   EMP_DEPT_NAME,
        L.CITY              EMP_DEPT_CITY,
        MGR.FIRST_NAME      MGR_NAME
FROM EMPLOYEES EMP, JOBS J, SALARY_GRADE S, DEPARTMENTS D, LOCATIONS L, EMPLOYEES MGR
WHERE EMP.JOB_ID = J.JOB_ID
AND S.MIN_SALARY <= EMP.SALARY AND S.MAX_SALARY >= EMP.SALARY
AND EMP.DEPARTMENT_ID = D.DEPARTMENT_ID (+) -- '(+)'을 붙이면 NULL때문에 해당 조인에 참여하지 못한 행도 조인시킬 수 있다.
AND D.LOCATION_ID = L.LOCATION_ID (+)
AND EMP.MANAGER_ID = MGR.EMPLOYEE_ID (+)
ORDER BY EMP_ID;